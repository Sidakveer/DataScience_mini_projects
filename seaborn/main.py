# -*- coding: utf-8 -*-
"""Seaborn_and_Linear_Regression_(start).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10qkOq-5yfPMr8nTeX2-h7Sc0a_KRaP7i

# Introduction

Do higher film budgets lead to more box office revenue? Let's find out if there's a relationship using the movie budgets and financial performance data that I've scraped from [the-numbers.com](https://www.the-numbers.com/movie/budgets) on **May 1st, 2018**. 

<img src=https://i.imgur.com/kq7hrEh.png>

# Import Statements
"""

import pandas as pd
import matplotlib.pyplot as plt

"""# Notebook Presentation"""

pd.options.display.float_format = '{:,.2f}'.format

from pandas.plotting import register_matplotlib_converters
register_matplotlib_converters()

"""# Read the Data"""

data = pd.read_csv('cost_revenue_dirty.csv')
data

"""# Explore and Clean the Data

**Challenge**: Answer these questions about the dataset:
1. How many rows and columns does the dataset contain?
2. Are there any NaN values present?
3. Are there any duplicate rows?
4. What are the data types of the columns?
"""

data.isna().values.any()
data.duplicated().values.any()
data.info()

"""### Data Type Conversions

**Challenge**: Convert the `USD_Production_Budget`, `USD_Worldwide_Gross`, and `USD_Domestic_Gross` columns to a numeric format by removing `$` signs and `,`. 
<br>
<br>
Note that *domestic* in this context refers to the United States.
"""

columns = ["USD_Production_Budget", "USD_Worldwide_Gross", "USD_Domestic_Gross"]
for col in columns:
    data[col] = data[col].astype(str).str.replace("$", "")
    data[col] = data[col].astype(str).str.replace(",", "")
    data[col] = pd.to_numeric(data[col])

data.info()
data.head()

"""**Challenge**: Convert the `Release_Date` column to a Pandas Datetime type. """

data.Release_Date = pd.to_datetime(data.Release_Date)
data.info()

"""### Descriptive Statistics

**Challenge**: 

1. What is the average production budget of the films in the data set?
2. What is the average worldwide gross revenue of films?
3. What were the minimums for worldwide and domestic revenue?
4. Are the bottom 25% of films actually profitable or do they lose money?
5. What are the highest production budget and highest worldwide gross revenue of any film?
6. How much revenue did the lowest and highest budget films make?
"""

avg = data.USD_Production_Budget.mean()
avg

avg = data.USD_Production_Budget.mean()
data.describe()

"""# Investigating the Zero Revenue Films

**Challenge** How many films grossed $0 domestically (i.e., in the United States)? What were the highest budget films that grossed nothing?
"""

zero = data[data.USD_Domestic_Gross == 0]
zero.sort_values("USD_Production_Budget", ascending=False)

"""**Challenge**: How many films grossed $0 worldwide? What are the highest budget films that had no revenue internationally?"""

zero = data[data.USD_Worldwide_Gross == 0]
zero.sort_values("USD_Production_Budget", ascending=False)

"""### Filtering on Multiple Conditions"""

d = data.loc[(data.USD_Domestic_Gross == 0) & (data.USD_Worldwide_Gross != 0)]
d

"""**Challenge**: Use the [`.query()` function](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.query.html) to accomplish the same thing. Create a subset for international releases that had some worldwide gross revenue, but made zero revenue in the United States. 

Hint: This time you'll have to use the `and` keyword.
"""

d = data.query("USD_Domestic_Gross == 0 and USD_Worldwide_Gross != 0")
d

"""### Unreleased Films

**Challenge**:
* Identify which films were not released yet as of the time of data collection (May 1st, 2018).
* How many films are included in the dataset that have not yet had a chance to be screened in the box office? 
* Create another DataFrame called data_clean that does not include these films. 
"""

# Date of Data Collection
scrape_date = pd.Timestamp('2018-5-1')

unreleased = data[data.Release_Date >= scrape_date]
unreleased
clean_data = data.drop(unreleased.index)
clean_data

"""### Films that Lost Money

**Challenge**: 
What is the percentage of films where the production costs exceeded the worldwide gross revenue? 
"""

lost = clean_data.query("USD_Production_Budget > USD_Worldwide_Gross")
len(lost) * 100 / len(clean_data)

"""# Seaborn for Data Viz: Bubble Charts"""

import seaborn as sns

"""### Plotting Movie Releases over Time

**Challenge**: Try to create the following Bubble Chart:

<img src=https://i.imgur.com/8fUn9T6.png>


"""

plt.figure(figsize=(8,4), dpi=200)
 
ax = sns.scatterplot(data=clean_data,
                     x='USD_Production_Budget', 
                     y='USD_Worldwide_Gross',
                     hue="USD_Worldwide_Gross",
                     size='USD_Worldwide_Gross'
                     )
 
ax.set(ylim=(0, 3000000000),
       xlim=(0, 450000000),
       ylabel='Revenue in $ billions',
       xlabel='Budget in $100 millions')
